[{"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/index.js":"1","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/App.js":"2","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/button/button.js":"3","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/radio/radio.js":"4","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/button/buttonTypes.js":"5","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/button/index.js":"6","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/radio/index.js":"7","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/radio/radioTypes.js":"8","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/selectItems/SelectItems.js":"9","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/selectItems/rectangle.js":"10","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/selectItems/circleDot.js":"11","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/selectItems/checkBoxItem.js":"12","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/checkbox/index.js":"13","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/checkbox/checkbox.js":"14","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/_util/SeaUIBase.js":"15","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/_util/types.js":"16","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/_util/index.js":"17","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/select/index.js":"18","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/select/select.js":"19","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/select/selectTypes.js":"20","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/selectItems/textItem.js":"21","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/input/index.js":"22","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/input/input.js":"23","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/input/number.js":"24","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/input/curreny.js":"25","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/input/password.js":"26"},{"size":410,"mtime":1609102109473,"results":"27","hashOfConfig":"28"},{"size":3238,"mtime":1612248105028,"results":"29","hashOfConfig":"28"},{"size":2575,"mtime":1612247915704,"results":"30","hashOfConfig":"28"},{"size":2158,"mtime":1611965806124,"results":"31","hashOfConfig":"28"},{"size":549,"mtime":1612214483994,"results":"32","hashOfConfig":"28"},{"size":121,"mtime":1612248005178,"results":"33","hashOfConfig":"28"},{"size":80,"mtime":1610046263445,"results":"34","hashOfConfig":"28"},{"size":340,"mtime":1609915386633,"results":"35","hashOfConfig":"28"},{"size":769,"mtime":1611966208772,"results":"36","hashOfConfig":"28"},{"size":792,"mtime":1609915413203,"results":"37","hashOfConfig":"28"},{"size":993,"mtime":1610067509771,"results":"38","hashOfConfig":"28"},{"size":837,"mtime":1610067502333,"results":"39","hashOfConfig":"28"},{"size":39,"mtime":1610046542822,"results":"40","hashOfConfig":"28"},{"size":1501,"mtime":1611965834617,"results":"41","hashOfConfig":"28"},{"size":1000,"mtime":1612214637039,"results":"42","hashOfConfig":"28"},{"size":712,"mtime":1612247557330,"results":"43","hashOfConfig":"28"},{"size":228,"mtime":1612248032580,"results":"44","hashOfConfig":"28"},{"size":35,"mtime":1610050270080,"results":"45","hashOfConfig":"28"},{"size":2533,"mtime":1611965775451,"results":"46","hashOfConfig":"28"},{"size":56,"mtime":1610049873279,"results":"47","hashOfConfig":"28"},{"size":782,"mtime":1610402111647,"results":"48","hashOfConfig":"28"},{"size":237,"mtime":1612157028726,"results":"49","hashOfConfig":"28"},{"size":3772,"mtime":1612163468750,"results":"50","hashOfConfig":"28"},{"size":1570,"mtime":1611971011330,"results":"51","hashOfConfig":"28"},{"size":1403,"mtime":1611995915531,"results":"52","hashOfConfig":"28"},{"size":942,"mtime":1612163696156,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"13wcdlb",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/index.js",[],["111","112"],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/App.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/button/button.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/radio/radio.js",["113"],"import \"./radio.scss\";\nimport PropTypes from \"prop-types\";\nimport { SeaUIBase } from \"../_util/SeaUIBase\";\nimport { SeaUIType, SeaUIColor, RadioItemType, RadioItem } from \"./radioTypes\";\nexport class Radio extends SeaUIBase {\n  constructor(props) {\n    super(props, SeaUIType.RADIO);\n    this.state = {\n      data: this.props.data,\n    };\n  }\n\n  callback = (itemState) => {\n    let newData = this.state.data.map((item, index) => {\n      item.selected = item.value === itemState.value && itemState.selected;\n      return item;\n    });\n    this.setState({ data: newData });\n  };\n\n  getItems() {\n    let items = [];\n    this.state.data.forEach((item, index) => {\n      if (item.selected) {\n      }\n      switch (this.props.itemType) {\n        case RadioItemType.circleDot:\n          items.push(\n            <RadioItem.CircleDot\n              color={this.props.color}\n              text={item.text}\n              value={item.value}\n              selected={item.selected || false}\n              callback={this.callback}\n              key={index}\n            />\n          );\n          break;\n        case RadioItemType.rectangle:\n          items.push(\n            <RadioItem.Rectangle\n              color={this.props.color}\n              text={item.text}\n              value={item.value}\n              selected={item.selected || false}\n              callback={this.callback}\n              key={index}\n            />\n          );\n          break;\n      }\n    });\n    return items;\n  }\n\n  classNames() {\n    return this.getClassNames(\"seauiRadioWrapper\", this.props.customClass);\n  }\n\n  render() {\n    return <span className={this.classNames()}>{this.getItems()}</span>;\n  }\n}\n/**\n * data:{ text:<string>,value:<string>, selected:<bool>  }\n * color : one of SeaUIColor\n * itemType : one of RadioItemType\n * customClass : <string>\n */\nRadio.propTypes = {\n  data: PropTypes.array,\n  color: PropTypes.oneOf(SeaUIBase.objctToArray(SeaUIColor)),\n  itemType: PropTypes.oneOf(SeaUIBase.objctToArray(RadioItemType)),\n  customClass: PropTypes.string,\n};\n\nRadio.defaultProps = {\n  data: [],\n  color: SeaUIColor.bule,\n  itemType: RadioItemType.circleDot,\n  customClass: \"\",\n};\n","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/button/buttonTypes.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/button/index.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/radio/index.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/radio/radioTypes.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/selectItems/SelectItems.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/selectItems/rectangle.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/selectItems/circleDot.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/selectItems/checkBoxItem.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/checkbox/index.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/checkbox/checkbox.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/_util/SeaUIBase.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/_util/types.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/_util/index.js",["114"],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/select/index.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/select/select.js",["115","116"],"import \"./select.scss\";\nimport PropTypes from \"prop-types\";\nimport { SeaUIBase } from \"../_util/SeaUIBase\";\nimport { SeaUIType, SeaUIColor } from \"./selectTypes\";\nimport { TextItem } from \"../selectItems/textItem\";\nimport React from \"react\";\nexport class Select extends SeaUIBase {\n  constructor(props) {\n    super(props, SeaUIType.SELECT);\n    let { data, text, value } = this.init();\n    this.state = { selected: false, data: data, text: text };\n    this.wrapper = React.createRef();\n  }\n  init = (selectedItem) => {\n    let data = this.state ? this.state.data : this.props.data;\n\n    let text = this.props.text;\n    let value = \"\";\n    data.map((ele) => {\n      if (selectedItem) {\n        ele.selected = ele.value === selectedItem.value;\n      }\n      if (ele.selected) {\n        text = ele.text;\n        value = ele.value;\n      }\n      return ele;\n    });\n    return { data, text, value };\n  };\n\n  callback = (selectedItem) => {\n    let { data, text, value } = this.init(selectedItem);\n    this.setState({ selected: false, data: data, text: text });\n  };\n\n  uiClick = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    this.setState({ selected: true });\n  };\n\n  classNames = () => {\n    let names = this.getClassNames(\n      \"seaSelectWrapper\",\n      this.state.selected ? \"seaSelectSelected\" : \"\",\n      this.props.color\n    );\n    return names;\n  };\n\n  onBlur = () => {\n    this.setState({ selected: false });\n  };\n\n  onAnimationEnd = () => {\n    this.wrapper.current.focus();\n  };\n\n  getOptions = () => {\n    let options = [];\n    this.state.data.forEach((element) => {\n      options.push(\n        <TextItem\n          text={element.text}\n          value={element.value}\n          selected={element.selected || false}\n          callback={this.callback}\n          color={this.props.color}\n        />\n      );\n    });\n    return options;\n  };\n\n  render() {\n    return (\n      <div className={this.classNames()} onClick={this.uiClick}>\n        {this.state.text}\n        <div\n          ref={this.wrapper}\n          tabIndex=\"-1\"\n          onAnimationEnd={this.onAnimationEnd}\n          onBlur={this.onBlur}\n          className=\"seaSelect-selectItemsWrapper\"\n        >\n          {this.getOptions()}\n        </div>\n      </div>\n    );\n  }\n}\n\nSelect.propTypes = {\n  color: PropTypes.oneOf(SeaUIBase.objctToArray(SeaUIColor)),\n  data: PropTypes.array.isRequired,\n  defaultText: PropTypes.string.isRequired,\n};\n\nSelect.defaultProps = {\n  color: SeaUIColor.blue,\n  data: [],\n  defaultText: \"chose an option\",\n};\n","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/select/selectTypes.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/selectItems/textItem.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/input/index.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/input/input.js",["117","118","119"],"import \"./input.scss\";\nimport PropTypes from \"prop-types\";\nimport { SeaUIBase } from \"../_util/SeaUIBase\";\nimport { SeaUIType, SeaUIColor } from \"../_util/types\";\nimport React from \"react\";\nexport class Input extends SeaUIBase {\n  constructor(props, uiType) {\n    super(props, uiType || SeaUIType.INPUT);\n    this.wrapper = React.createRef();\n    this.state = {\n      isFocus: false,\n      value: this.props.defaultText,\n    };\n  }\n\n  onChange = (e) => {\n    let value = e.target.value;\n    if (this.props.onChange) {\n      value = this.props.onChange(value);\n    }\n    this.setState({ value: value });\n  };\n\n  onFocus = (e) => {\n    this.setState({ isFocus: true });\n  };\n\n  onBlur = (e) => {\n    if (!this.wrapper.current.contains(e.relatedTarget)) {\n      this.setState({ isFocus: false });\n    }\n  };\n\n  getLableEle = (position) => {\n    let ele =\n      position == \"forward\" ? this.props.addonBefore : this.props.addonAfter;\n    if (ele) {\n      let eleType = typeof ele;\n      return (\n        <span\n          className={this.getClassNames(\"labelWrapper\", {\n            labelObject: !(eleType === \"string\"),\n            labelText: eleType === \"string\",\n            forward: position === \"forward\",\n            behind: !(position === \"forward\"),\n          })}\n        >\n          {ele}\n        </span>\n      );\n    }\n    return null;\n  };\n\n  btnOnClick = (event) => {\n    this.setState({ value: \"\" });\n  };\n\n  getButton = () => {\n    let button = null;\n    if (this.props.isShowBtn) {\n      let btnAttrs = {\n        class: this.getClassNames(\"far\", this.props.btnLogo, {\n          showDelBtn: this.state.value.length != 0,\n        }),\n        onClick: this.props.btnOnClick || this.btnOnClick,\n      };\n      button = <i {...btnAttrs}></i>;\n    }\n    return button;\n  };\n\n  render() {\n    let button = this.getButton();\n    let addonBefore = this.getLableEle(\"forward\");\n    let addonAfter = this.getLableEle(\"behind\");\n\n    let spanWrapperAttrs = {\n      ref: this.wrapper,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      tabIndex: \"-1\",\n      className: this.getClassNames(\n        \"inputWrapper\",\n        this.state.isFocus ? \"focus\" : \"\",\n        {\n          leftBorder: addonBefore == null,\n          rightBorder: addonAfter == null,\n        },\n        this.props.color\n      ),\n    };\n\n    let inputAttrs = {\n      maxLength: this.props.maxLength == 0 ? null : this.props.maxLength,\n      onKeyDown: this.props.onKeyDown,\n      onChange: this.onChange,\n      type: this.props.inputHtmlType,\n      value: this.state.value,\n    };\n\n    let classNames = this.getClassNames(\"seauiInput\", {\n      [this.props.customClassNames]: Boolean(this.props.customClassNames),\n    });\n    return (\n      <div className={classNames}>\n        {addonBefore}\n        <span {...spanWrapperAttrs}>\n          <input {...inputAttrs} />\n          {button}\n        </span>\n        {addonAfter}\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  color: PropTypes.oneOf(SeaUIBase.objctToArray(SeaUIColor)),\n  defaultText: PropTypes.string,\n  numberFormat: PropTypes.string,\n  maxLength: PropTypes.number,\n  isShowBtn: PropTypes.bool,\n  btnLogo: PropTypes.string,\n  btnOnClick: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onChange: PropTypes.func,\n  inputHtmlType: PropTypes.string,\n  customClassNames: PropTypes.string,\n  addonAfter: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  addonBefore: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nInput.defaultProps = {\n  color: SeaUIColor.blue,\n  defaultText: \"\",\n  numberFormat: \"\",\n  maxLength: 0,\n  isShowBtn: true,\n  btnLogo: \"fa-times-circle\",\n  btnOnClick: null,\n  onKeyDown: null,\n  onChange: null,\n  inputHtmlType: \"text\",\n  customClassNames: \"\",\n  addonBefore: null,\n  addonAfter: null,\n};\n","/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/input/number.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/input/curreny.js",[],"/Users/hank/Desktop/YINGHENGHE/GitHub/sea-ui/src/input/password.js",["120"],"import { Input } from \"./input\";\nimport { SeaUIType } from \"../_util/types\";\nimport PropTypes from \"prop-types\";\nimport { SeaUIBase } from \"../_util/SeaUIBase\";\nexport class Password extends SeaUIBase {\n  constructor(props) {\n    super(props, SeaUIType.PASSWORD);\n    this.openEyes = { btnLogo: \"fa-eye-slash\", inputHtmlType: \"text\" };\n    this.closeEyes = { btnLogo: \"fa-eye\", inputHtmlType: \"password\" };\n    this.state = this.openEyes;\n  }\n\n  onBtnClick = () => {\n    if (this.state.inputHtmlType === \"text\") {\n      this.setState(this.closeEyes);\n    } else {\n      this.setState(this.openEyes);\n    }\n  };\n\n  render() {\n    let inputAtrrs = {\n      btnOnClick: this.onBtnClick,\n      btnLogo: this.state.btnLogo,\n      inputHtmlType: this.state.inputHtmlType,\n    };\n    return <Input {...this.props} {...inputAtrrs}></Input>;\n  }\n}\n\nPassword.propTypes = {\n  ...Input.propTypes,\n};\n\nPassword.defaultProps = {\n  ...Input.defaultProps,\n};\n",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":26,"column":7,"nodeType":"127","messageId":"128","endLine":51,"endColumn":8},{"ruleId":"129","severity":1,"message":"130","line":1,"column":10,"nodeType":"131","messageId":"132","endLine":1,"endColumn":15},{"ruleId":"129","severity":1,"message":"133","line":10,"column":23,"nodeType":"131","messageId":"132","endLine":10,"endColumn":28},{"ruleId":"129","severity":1,"message":"133","line":33,"column":23,"nodeType":"131","messageId":"132","endLine":33,"endColumn":28},{"ruleId":"134","severity":1,"message":"135","line":36,"column":16,"nodeType":"136","messageId":"137","endLine":36,"endColumn":18},{"ruleId":"134","severity":1,"message":"138","line":64,"column":47,"nodeType":"136","messageId":"137","endLine":64,"endColumn":49},{"ruleId":"134","severity":1,"message":"135","line":95,"column":39,"nodeType":"136","messageId":"137","endLine":95,"endColumn":41},{"ruleId":"129","severity":1,"message":"139","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":17},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'value' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]